source('~/finance/_posts/资讯/_Drafts/inf.R', echo=TRUE)
statusLine <- which(substr(content, 1, 7) == 'status:')
rm(list = ls())
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/行业/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#########################################################################################
f <- "行业研究.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
status
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
try(knit(text=content, output=outFile), silent=FALSE)
rm(list=ls(all=TRUE))
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "早盘资讯.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
outFile
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
content
text
output
outFile
render(text=content, output=outFile)
outfile
try(knit(text=content, output=outFile), silent=FALSE)
library(rvest)
url <- "http://stock.stockstar.com/list/sectors.htm"
link <- url %>%
read_html(encoding="GB18030") %>%
html_nodes(".listtable  li  a") %>%
html_attr("href")
article <- function(x){
link <- x
title  <- x %>%
read_html(encoding="GB18030") %>%
html_nodes("h1") %>%
html_text()
page.numbers <- x %>%
read_html(encoding="GB18030")  %>%
html_nodes("#Page a") %>%
html_text() %>%
as.numeric()
page.numbers <- page.numbers[1:length(page.numbers)-1]
date <- x %>%
read_html(encoding="GB18030") %>%
html_nodes("#pubtime_baidu") %>%
html_text()
url0 <- strsplit(x, "\\.shtml")
url.new <- rep( NA, length(page.numbers) )
for ( i in 1:length(page.numbers) ){
url.new[i] <- paste(url0, "_", i, ".shtml", sep="")
}
text <- function(x){
text <- x %>%
read_html(encoding="GB18030")  %>%
html_nodes("#container-article  p") %>%
html_text()
text <- text[3:length(text)-1]
}
main <- lapply(url.new, text)
tidai <- function(x){
# y = paste(x, collapse = '\t ============================================================================ \t')
y = paste(x, collapse = '\n\n')
return(y)
}
inf = lapply(link, article)

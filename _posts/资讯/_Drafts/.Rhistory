dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "test.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
######################################################################
## 产生的图片存储位置 `/assets/images/r-figures/`
#fig.path <- paste0("r-figures/", sub(".Rmd$", "", basename(files)), "/")
#opts_chunk$set(fig.path = fig.path)
## opts_chunk$set(fig.cap = "center")  ## figure position
## render_jekyll()
######################################################################
try(knit(text=content, output=outFile), silent=FALSE)
beep()
file.new <- paste0(Sys.Date(), "-i财富.md")
to.file = paste0("~/finance/_posts/资讯/", file.new)
file.copy("i财富.md", to = to.file,  recursive=TRUE)
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "test.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
######################################################################
## 产生的图片存储位置 `/assets/images/r-figures/`
#fig.path <- paste0("r-figures/", sub(".Rmd$", "", basename(files)), "/")
#opts_chunk$set(fig.path = fig.path)
## opts_chunk$set(fig.cap = "center")  ## figure position
## render_jekyll()
######################################################################
try(knit(text=content, output=outFile), silent=FALSE)
beep()
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "财富.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
######################################################################
## 产生的图片存储位置 `/assets/images/r-figures/`
#fig.path <- paste0("r-figures/", sub(".Rmd$", "", basename(files)), "/")
#opts_chunk$set(fig.path = fig.path)
## opts_chunk$set(fig.cap = "center")  ## figure position
## render_jekyll()
######################################################################
try(knit(text=content, output=outFile), silent=FALSE)
beep()
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "财富.Rmd"
f
message(paste("Processing ", f, sep=''))
content <- readLines(f)
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
f <- "财富.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
######################################################################
## 产生的图片存储位置 `/assets/images/r-figures/`
#fig.path <- paste0("r-figures/", sub(".Rmd$", "", basename(files)), "/")
#opts_chunk$set(fig.path = fig.path)
## opts_chunk$set(fig.cap = "center")  ## figure position
## render_jekyll()
######################################################################
try(knit(text=content, output=outFile), silent=FALSE)
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "财富.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
outFile
render_markdown(strict=TRUE)
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
try(render(text=content, output=outFile), silent=FALSE)
try(render(text=content), silent=FALSE)
outFile
content
knit(text=content, output=outFile)
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "财富.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
######################################################################
## 产生的图片存储位置 `/assets/images/r-figures/`
#fig.path <- paste0("r-figures/", sub(".Rmd$", "", basename(files)), "/")
#opts_chunk$set(fig.path = fig.path)
## opts_chunk$set(fig.cap = "center")  ## figure position
## render_jekyll()
######################################################################
try(knit(text=content, output=outFile), silent=FALSE)
beep()
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
file.new <- paste0(Sys.Date(), "-i财富.html")
file.new
to.file = paste0("~/finance/_posts/资讯/", file.new)
to.file = paste0("~/finance/_posts/资讯/", file.new)
file.copy("i财富.html", to = to.file,  recursive=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
setwd("~/finance/_posts/资讯/_Drafts")
file.new <- paste0(Sys.Date(), "-i财富-金牌分析师.html")
to.file = paste0("~/finance/_posts/资讯/", file.new)
file.copy("i财富-金牌分析师.html", to = to.file,  recursive=TRUE)
library(rvest)
library(beepr)
url <- "http://www.icaifu.com/report/2/list.shtml"          ###  行业分析
link <- url %>%
read_html() %>%
html_nodes(".fund  td  a") %>%
html_attr("href") %>%
.[grep("2015", .)] %>%
.[1:30] %>%
gsub("/report/detail/","http://www.icaifu.com/report/detail/",.)
link
x <- link[1]
title <- x %>%
read_html() %>%
html_nodes(".single-title") %>%
html_text()
x <- link[1]
x
title <- x %>%
read_html() %>%
html_nodes(".pi1 , h1") %>%
html_text()
title
title <- x %>%
read_html() %>%
html_nodes(".pi1 h1") %>%
html_text()
title
date <- url %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text()
date
date <- x %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text()
date
date <- x %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text() %>%
.grep("2015",)
date <- x %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text() %>%
.[grep("2015", .)]
date
main <- x %>%
read_html()  %>%
html_nodes("div") %>%
html_text()
main
main <- x %>%
read_html()  %>%
html_nodes("d.yan_t1 div") %>%
html_text()
main
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text()
main
url <- "http://www.icaifu.com/report/2/list.shtml"          ###  行业分析
link <- url %>%
read_html() %>%
html_nodes(".fund  td  a") %>%
html_attr("href") %>%
.[grep("2015", .)] %>%
.[1:30] %>%
gsub("/report/detail/","http://www.icaifu.com/report/detail/",.)
x <- link[1]
title <- x %>%
read_html() %>%
html_nodes(".pi1 h1") %>%
html_text()
x <- link[2]
title <- x %>%
read_html() %>%
html_nodes(".pi1 h1") %>%
html_text()
date <- x %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text() %>%
.[grep("2015", .)]
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text()
main
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text() %>%
gsub("\n", "\n \n", .)
main
x <- link[4]
x
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text()
main
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text()
main
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
rm(list=ls(all=TRUE))
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=FALSE
#############################################################################
f <- "i财富-行业分析.Rmd"
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/converting_function-散户之家.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-散户之家.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-散户之家.R', echo=TRUE)
rm(list=ls(all=TRUE))
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
require(rmarkdown)
library(rvest)
setwd("~/finance/_posts/资讯/_Drafts")
dir=getwd()
images.dir=dir
images.url='/finance/assets/images/'
out_ext='.md'
in_ext='.Rmd'
recursive=TRUE
f <- "散户之家2.Rmd"
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='md')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
######################################################################
## 产生的图片存储位置 `/assets/images/r-figures/`
#fig.path <- paste0("r-figures/", sub(".Rmd$", "", basename(files)), "/")
#opts_chunk$set(fig.path = fig.path)
## opts_chunk$set(fig.cap = "center")  ## figure position
## render_jekyll()
######################################################################
try(knit(text=content, output=outFile), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
source('~/finance/_posts/资讯/_Drafts/inf-i财富.R', echo=TRUE)
link
x <- link[5]
title <- x %>%
read_html() %>%
html_nodes(".pi1 h1") %>%
html_text()
date <- x %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text() %>%
.[grep("2015", .)]
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text() %>%
gsub("\r\n \n\t|\t\t\r\n|\n\t|\t\t|\n", "\n \n", .)
all <- c(x, title, date, main)
all
article <- function(x){
title <- x %>%
read_html() %>%
html_nodes(".pi1 h1") %>%
html_text()
date <- x %>%
read_html() %>%
html_nodes(".yan_to p") %>%
html_text() %>%
.[grep("2015", .)]
main <- x %>%
read_html()  %>%
html_nodes(".yan_t1 div") %>%
html_text() %>%
gsub("\r\n \n\t|\t\t\r\n|\n\t|\t\t|\n", "\n\n \n", .)
all <- c(x, title, date, main)
}
article(link[2])
article
m =article(link[2])
m
